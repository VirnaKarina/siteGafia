-- Total de viagens por estado

CREATE OR REPLACE VIEW vw_empresa_viagens_por_estado AS
SELECT 
    e.nm_estado,
    e.uf_estado,
    COUNT(h.id_historico) AS total_viagens,
    SUM(h.km_viagem) AS km_total,
    ROUND(AVG(EXTRACT(EPOCH FROM h.tempo_viagem) / 3600), 2) AS tempo_medio_horas,
    SUM(h.qnt_abastecimento) AS total_abastecimentos
FROM historico_viagem h
JOIN estado e ON h.id_estado = e.id_estado
GROUP BY e.nm_estado, e.uf_estado;



-- Desempenho dos Carros

CREATE OR REPLACE VIEW vw_empresa_desempenho_carros AS
SELECT 
    c.id_carro,
    m.nm_marca,
    mo.nm_modelo,
    c.ano_carro,
    c.dur_bat,
    COUNT(h.id_historico) AS total_viagens,
    SUM(h.km_viagem) AS km_total,
    SUM(h.qnt_abastecimento) AS abastecimentos_total,
    ROUND(SUM(h.km_viagem) / NULLIF(SUM(h.qnt_abastecimento), 0), 2) AS eficiencia_km_por_abastecimento
FROM carro c
JOIN marca m ON c.id_marca = m.id_marca
JOIN modelo mo ON c.id_modelo = mo.id_modelo
JOIN historico_viagem h ON c.id_carro = h.id_carro
GROUP BY c.id_carro, m.nm_marca, mo.nm_modelo, c.ano_carro, c.dur_bat;


--Engajamento dos usu√°rios

CREATE OR REPLACE VIEW vw_empresa_engajamento_usuarios AS
SELECT 
    u.id_usuario,
    CONCAT(u.nome, ' ', u.sobrenome) AS nome_completo,
    u.email,
    COUNT(h.id_historico) AS total_viagens,
    SUM(h.km_viagem) AS km_total,
    ROUND(AVG(h.km_viagem), 2) AS media_km_por_viagem,
    ROUND(AVG(EXTRACT(EPOCH FROM h.tempo_viagem)) / 3600, 2) AS media_tempo_viagem_horas
FROM usuarios u
LEFT JOIN historico_viagem h ON u.id_usuario = h.id_usuario
GROUP BY u.id_usuario, nome_completo, u.email;




